{"version":3,"file":"static/js/739.7b731a76.chunk.js","mappings":"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","sources":["components/home.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../web.css\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport company from \"../components/images/lin1.png\";\r\nimport plus from \"../components/images/plus.png\";\r\nimport send from \"../components/images/send.png\";\r\nimport Bin from \"../components/images/bin.png\";\r\nimport Back from \"../components/images/back-button.png\";\r\nimport Loader from \"./loader\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n  const navigate = useNavigate();\r\n  const navData = useLocation();\r\n  const name = navData.state?.name;\r\n\r\n  const [text, setText] = useState(\"\");\r\n  const [details, setDetails] = useState([]);\r\n  const [image, setImage] = useState(null);\r\n  const [loader, setLoader] = useState(false);\r\n  const [replies, setReplies] = useState({});\r\n  const [postt, setPostt] = useState([]);\r\n  const [searchClick, setSearchClick] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n  const logout = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (name) {\r\n      showData();\r\n      showReply();\r\n    }\r\n  }, []);\r\n\r\n  const handleReplyChange = (postId, value) => {\r\n    setReplies((prev) => ({ ...prev, [postId]: value }));\r\n  };\r\n\r\n  const sendReply = async (postId) => {\r\n    const replyText = replies[postId]?.trim();\r\n    if (!replyText) return;\r\n\r\n    try {\r\n      const reply = await axios.post(\r\n        \"https://minilinked-in.onrender.com/api/posts/cmt\",\r\n        { postId, userId: name._id, reply: replyText, name: name.firstname }\r\n      );\r\n      setReplies((prev) => ({ ...prev, [postId]: \"\" }));\r\n      showReply();\r\n    } catch (error) {\r\n      console.log(\"error sending reply\", error);\r\n    }\r\n  };\r\n\r\n  const handleImage = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) setImage(file);\r\n  };\r\n  const submitForm = async (e) => {\r\n    e.preventDefault();\r\n    setLoader(true);\r\n    try {\r\n      if (image) {\r\n        const formData = new FormData();\r\n        formData.append(\"user\", name.firstname);\r\n        formData.append(\"text\", text);\r\n        formData.append(\"userId\", name._id);\r\n        formData.append(\"image\", image);\r\n\r\n        await axios.post(\r\n          \"https://minilinked-in.onrender.com/api/posts/user\",\r\n          formData\r\n        );\r\n        alert(\"Post has Created !!!\");\r\n        setText(\"\");\r\n        setImage(null);\r\n        showData();\r\n        showReply();\r\n      } else {\r\n        await axios.post(\"https://minilinked-in.onrender.com/api/posts/user\", {\r\n          user: name.firstname,\r\n          text: text,\r\n          userId: name._id,\r\n        });\r\n        alert(\"Post has Created !!!\");\r\n        setText(\"\");\r\n        setImage(null);\r\n        showData();\r\n        showReply();\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error sending data on client side\", error.message);\r\n    } finally {\r\n      setLoader(false);\r\n    }\r\n  };\r\n\r\n  const deletepost = (id) => {\r\n    const confirm = window.confirm(\"Are you sure , you want to delete this ?\");\r\n    if (confirm) {\r\n      axios\r\n        .delete(`https://minilinked-in.onrender.com/api/posts/delete/${id}`)\r\n        .then((result) => {\r\n          alert(\"Post deleted !!!\");\r\n          showData();\r\n        })\r\n        .catch((err) => {\r\n          alert(\"Error Deleting Post !\");\r\n        });\r\n    }\r\n  };\r\n  const showData = () => {\r\n    setSearchClick(false);\r\n    setSearch(\"\");\r\n    axios\r\n      .get(\"https://minilinked-in.onrender.com/api/posts\")\r\n      .then((res) => {\r\n        setDetails(res.data.data);\r\n      })\r\n      .catch((err) => console.log(\"data not fetched\", err.message));\r\n  };\r\n\r\n  const showReply = () => {\r\n    axios\r\n      .get(\"https://minilinked-in.onrender.com/api/posts/cmt\")\r\n      .then((res) => {\r\n        setPostt(res.data);\r\n      })\r\n      .catch((err) => console.log(\"replies not fetched\", err.message));\r\n  };\r\n\r\n  const searchIT = () => {\r\n    if (!search.trim()) {\r\n      showData(); // reset to full list\r\n      return;\r\n    }\r\n    setSearchClick(true);\r\n    const searchData = details.filter((v) =>\r\n      v.user.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n    setDetails(searchData);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const profilePic = (namee) => {\r\n    navigate(\"/profile\", { state: { profilename: namee } });\r\n  };\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar1 flex\">\r\n        <a href=\"/home\" className=\"imagesection\">\r\n          <img src={company} className=\"nav-img\" alt=\"/\" />\r\n          <label\r\n            style={{\r\n              color: \"white\",\r\n              fontSize: \"large\",\r\n              fontWeight: \"600\",\r\n              fontFamily: \"calibri\",\r\n            }}\r\n          >\r\n            LinkedIn Lite\r\n          </label>\r\n        </a>\r\n        <button\r\n          className=\"btn2\"\r\n          onClick={() => {\r\n            navigate(\"/\");\r\n          }}\r\n        >\r\n          Sign up\r\n        </button>\r\n        <section className=\"links\">\r\n          <ul className=\"nav-ul flex\">\r\n            <strong\r\n              style={{\r\n                fontSize: \"medium\",\r\n                color: \"white\",\r\n                fontFamily: \"cursive\",\r\n              }}\r\n            >\r\n              User Profile\r\n            </strong>\r\n            {name ? (\r\n              <a className=\"bttn2\" onClick={() => setMenuOpen((prev) => !prev)}>\r\n                {`${name?.firstname} ${name?.lastname}`}\r\n\r\n                {menuOpen && (\r\n                  <div className=\"dropdown\">\r\n                    <button\r\n                      className=\"drop-item\"\r\n                      onClick={() => profilePic(name.firstname)}\r\n                    >\r\n                      Profile\r\n                    </button>\r\n                    <button className=\"drop-item\" onClick={logout}>\r\n                      Logout\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </a>\r\n            ) : (\r\n              <div>\r\n                <li\r\n                  style={{\r\n                    padding: \"10px\",\r\n                    color: \"black\",\r\n                    listStyle: \"none\",\r\n                    fontSize: \"large\",\r\n                  }}\r\n                >\r\n                  Sign in first\r\n                </li>\r\n              </div>\r\n            )}\r\n          </ul>\r\n        </section>\r\n      </nav>\r\n\r\n      <div className=\"contain container1\">\r\n        <div className=\"searchSection\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"search\"\r\n            autoComplete=\"off\"\r\n            placeholder=\"search username . . .\"\r\n            id=\"searchBar\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n          />\r\n          <button onClick={searchIT} className=\"searchBtn\">\r\n            search\r\n          </button>\r\n        </div>\r\n        {searchClick && (\r\n          <button className=\"backBtn\" onClick={showData}>\r\n            <img src={Back} alt=\"returnBtn\" className=\"backBtn1\" />\r\n            Back\r\n          </button>\r\n        )}\r\n        <form className=\"listForm flex container1\" onSubmit={submitForm}>\r\n          <section className=\"homePost\">\r\n            <input\r\n              className=\"homePostt\"\r\n              type=\"text\"\r\n              name=\"text\"\r\n              placeholder=\"What's in your Mind . . .\"\r\n              autoComplete=\"off\"\r\n              value={text}\r\n              onChange={(e) => {\r\n                setText(e.target.value);\r\n              }}\r\n            />\r\n            <div className=\"imgcontainer\">\r\n              <span className=\"file-upload\">\r\n                {image ? image.name : \"Upload pic\"}\r\n              </span>\r\n              <label htmlFor=\"fileupload\">\r\n                <img src={plus} alt=\"plusSign\" className=\"plusimg\" />\r\n              </label>\r\n              <input\r\n                id=\"fileupload\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                style={{ display: \"none\" }}\r\n                onChange={handleImage}\r\n              />\r\n            </div>\r\n          </section>\r\n\r\n          <button type=\"submit\" className=\"btn\">\r\n            POST\r\n          </button>\r\n          <br />\r\n        </form>\r\n        <div style={{ marginInline: \"auto\", marginTop: \"20px\" }}>\r\n          {\" \"}\r\n          {loader && <Loader />}\r\n        </div>\r\n        <div className=\"answersMain\">\r\n          <div className=\"answers\">\r\n            {details.map((value) => (\r\n              <div className=\"container2\" key={value._id}>\r\n                <div id=\"hero\">\r\n                  <div style={{ marginBottom: \"10px\" }}>\r\n                    <a\r\n                      style={{ cursor: \"pointer\" }}\r\n                      className=\"click\"\r\n                      onClick={() => {\r\n                        profilePic(value.user);\r\n                      }}\r\n                    >\r\n                      {`@${value.user}`}\r\n                    </a>\r\n                  </div>\r\n                  <h2>{value.post}</h2>\r\n                  {value.image && (\r\n                    <div className=\"impPost1\">\r\n                      <img\r\n                        src={value.image}\r\n                        alt=\"imgPost\"\r\n                        className=\"imgpost\"\r\n                        loading=\"lazy\"\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  <h5 className=\"dateFont\" style={{ marginTop: \"5px\" }}>\r\n                    {new Date(value.createdAt).toLocaleString()}\r\n                  </h5>\r\n                  <h5 className=\"replyInp\" style={{ color: \"goldenrod\" }}>\r\n                    comments\r\n                  </h5>\r\n                  <div\r\n                    className=\"replybox\"\r\n                    style={{\r\n                      borderBottom:\r\n                        postt.filter((reply) => reply.postId === value._id)\r\n                          .length >= 5\r\n                          ? \".2px solid lightgray\"\r\n                          : \"none\",\r\n                    }}\r\n                  >\r\n                    {postt &&\r\n                      postt.length > 0 &&\r\n                      postt.map(\r\n                        (valuee) =>\r\n                          value._id === valuee.postId && (\r\n                            <p className=\"replies\" key={valuee._id}>\r\n                              <label className=\"replyTag\">{`${valuee.name}:`}</label>\r\n                              {valuee.reply}\r\n                            </p>\r\n                          )\r\n                      )}\r\n                  </div>\r\n\r\n                  <div id=\"commentSection\">\r\n                    <input\r\n                      autoComplete=\"off\"\r\n                      className=\"replyInp1\"\r\n                      type=\"text\"\r\n                      placeholder=\"write a comment ...\"\r\n                      onChange={(e) =>\r\n                        handleReplyChange(value._id, e.target.value)\r\n                      }\r\n                      value={replies[value._id] || \"\"}\r\n                    />\r\n                    <label htmlFor=\"replyBtn\">\r\n                      <img\r\n                        src={send}\r\n                        alt=\"replybtn\"\r\n                        className=\"replyBtn\"\r\n                        onMouseDown={() => sendReply(value._id)}\r\n                      />\r\n                    </label>\r\n                    <input style={{ display: \"none\" }} id=\"replyBtn\" />\r\n                  </div>\r\n                </div>\r\n\r\n                {value.userId === name?._id && (\r\n                  <button\r\n                    className=\"deletebtn\"\r\n                    title=\"Delete post\"\r\n                    onClick={() => deletepost(value._id)}\r\n                  >\r\n                    <img src={Bin} alt=\"deletePost\" className=\"bin\" />\r\n                  </button>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"names":["_navData$state","navigate","useNavigate","name","useLocation","state","text","setText","useState","details","setDetails","image","setImage","loader","setLoader","replies","setReplies","postt","setPostt","searchClick","setSearchClick","search","setSearch","menuOpen","setMenuOpen","useEffect","showData","showReply","axios","get","then","res","data","catch","err","console","log","message","profilePic","namee","profilename","_jsxs","children","className","href","_jsx","src","alt","style","color","fontSize","fontWeight","fontFamily","onClick","prev","firstname","lastname","logout","padding","listStyle","type","autoComplete","placeholder","id","onChange","e","target","value","searchIT","trim","searchData","filter","v","user","toLowerCase","includes","onSubmit","async","preventDefault","formData","FormData","append","_id","post","alert","userId","error","htmlFor","plus","accept","display","file","files","marginInline","marginTop","Loader","map","marginBottom","cursor","loading","Date","createdAt","toLocaleString","borderBottom","reply","postId","length","valuee","handleReplyChange","send","onMouseDown","_replies$postId","replyText","sendReply","title","deletepost","window","confirm","delete","result","Bin"],"sourceRoot":""}